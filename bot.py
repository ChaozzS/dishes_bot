import os
import json
from flask import Flask, request, send_from_directory
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv
import asyncio

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")

app = Application.builder().token(TOKEN).build()
flask_app = Flask(__name__)

# HTML –º–µ–Ω—é
@flask_app.route("/menu")
def menu():
    return send_from_directory("static", "menu.html")

# –∫–æ—Ä–µ–Ω–µ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
@flask_app.route("/")
def index():
    return "‚úÖ Telegram Webhook –±–æ—Ç –ø—Ä–∞—Ü—é—î!", 200

# Webhook —Ç–æ—á–∫–∞ –ø—Ä–∏–π–æ–º—É
@flask_app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), app.bot)
    app.create_task(app.process_update(update))  # –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ –æ–±—Ä–æ–±–∫–∞
    return "ok", 200

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìã –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é", web_app=WebAppInfo(url=f"{WEBAPP_URL}/menu"))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é:", reply_markup=reply_markup)

# –≤–∏–±—ñ—Ä —Å—Ç—Ä–∞–≤–∏
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        data = json.loads(update.message.web_app_data.data)
        dish = data.get("dish")
        await context.bot.send_message(chat_id=update.effective_chat.id, text=f"üçΩÔ∏è –í–∏ –æ–±—Ä–∞–ª–∏: {dish}")
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ WebAppData:", e)

# —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))

# –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    async def main():
        await app.bot.set_webhook(url=f"{WEBAPP_URL}/{TOKEN}")
        print(f"üì° Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBAPP_URL}/{TOKEN}")
        flask_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))

    asyncio.run(main())
