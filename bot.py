import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get('TELEGRAM_TOKEN')
ADMIN_CHAT_ID = int(os.environ.get('ADMIN_CHAT_ID', 0))

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–µ–Ω—é: –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
MENU = {
    '–ü–∏—Ü—Ü–∞': ['–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', '–ì–∞–≤–∞–π—Å–∫–∞—è'],
    '–°—É—à–∏': ['–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è', '–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è', '–î—Ä–∞–∫–æ–Ω'],
    '–ù–∞–ø–∏—Ç–∫–∏': ['–ö–æ–ª–∞', '–°–æ–∫', '–í–æ–¥–∞'],
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [[InlineKeyboardButton(cat, callback_data=f"cat|{cat}")] for cat in MENU]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥–∞:',
        reply_markup=reply_markup
    )

async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    query = update.callback_query
    await query.answer()

    data = query.data.split('|')
    if data[0] == 'cat':
        category = data[1]
        keyboard = [[InlineKeyboardButton(item, callback_data=f"item|{category}|{item}")] for item in MENU[category]]
        keyboard.append([InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back')])
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ *{category}*. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:',
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    elif data[0] == 'item':
        category, item = data[1], data[2]
        user = query.from_user
        order_text = (
            f"üì¨ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or user.id}\n"
            f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
            f"–ë–ª—é–¥–æ: {item}"
        )
        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=order_text,
            parse_mode='Markdown'
        )
        await query.edit_message_text(
            text=f'‚úÖ –í–∞—à –∑–∞–∫–∞–∑ *{item}* –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!',
            parse_mode='Markdown'
        )

    elif query.data == 'back':
        keyboard = [[InlineKeyboardButton(cat, callback_data=f"cat|{cat}")] for cat in MENU]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥–∞:',
            reply_markup=reply_markup
        )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –æ–±—ã—á–Ω–∞—è, –∞ –Ω–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler('start', start))
    app.add_handler(CallbackQueryHandler(handle_menu_selection))

    # –ó–∞–ø—É—Å–∫ polling –∏–ª–∏ webhook –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if os.environ.get('RAILWAY'):
        WEBHOOK_URL = os.environ['WEBHOOK_URL']
        PORT = int(os.environ.get('PORT', '8443'))
        app.run_webhook(
            listen='0.0.0.0',
            port=PORT,
            webhook_url=f"{WEBHOOK_URL}{TOKEN}"
        )
    else:
        app.run_polling()

if __name__ == '__main__':
    main()
