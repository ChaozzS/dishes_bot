import os
import json
from flask import Flask, request, send_from_directory
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBHOOK_URL = os.getenv("WEBAPP_URL")  # –ø—Ä–∏–∫–ª–∞–¥: https://web-production-xxxx.up.railway.app

app_telegram = ApplicationBuilder().token(TOKEN).build()
flask_app = Flask(__name__)

# HTML-—Å—Ç–æ—Ä—ñ–Ω–∫–∞ (–º–µ–Ω—é)
@flask_app.route("/menu")
def menu():
    return send_from_directory("static", "menu.html")

# –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (–¥–ª—è —Ç–µ—Å—Ç—É)
@flask_app.route("/")
def index():
    return "‚úÖ Webhook bot –ø—Ä–∞—Ü—é—î", 200

# Webhook endpoint ‚Äî Telegram –Ω–∞–¥—Å–∏–ª–∞—î —Å—é–¥–∏
@flask_app.route(f"/{TOKEN}", methods=["POST"])
async def webhook():
    update = Update.de_json(request.get_json(force=True), app_telegram.bot)
    await app_telegram.process_update(update)
    return "ok", 200

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìã –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é", web_app=WebAppInfo(url=f"{WEBHOOK_URL}/menu"))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é:", reply_markup=reply_markup)

# –û–±—Ä–æ–±–∫–∞ WebAppData (–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        data = json.loads(update.message.web_app_data.data)
        dish = data.get("dish")
        await context.bot.send_message(chat_id=update.effective_chat.id, text=f"üçΩÔ∏è –í–∏ –æ–±—Ä–∞–ª–∏: {dish}")
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ WebAppData:", e)

# –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
app_telegram.add_handler(CommandHandler("start", start))
app_telegram.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))

# –°—Ç–∞—Ä—Ç—É—î–º–æ Flask + Telegram Webhook
if __name__ == "__main__":
    import asyncio

    async def set_webhook():
        webhook_url = f"{WEBHOOK_URL}/{TOKEN}"
        await app_telegram.bot.set_webhook(webhook_url)
        print(f"üì° Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {webhook_url}")

    asyncio.run(set_webhook())
    flask_app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
